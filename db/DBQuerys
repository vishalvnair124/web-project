ENUM(1,'Available', 2,'Busy') DEFAULT 'Available'


CREATE TABLE users (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    email VARCHAR(100) UNIQUE NOT NULL,
    password VARCHAR(255) NOT NULL,
    phone VARCHAR(15) NOT NULL,
    blood_group ENUM('A+', 'A-', 'B+', 'B-', 'AB+', 'AB-', 'O+', 'O-') NOT NULL,
    availability_status INT,
    latitude DECIMAL(10,8) NOT NULL,
    longitude DECIMAL(11,8) NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);



ENUM(1,'Pending', 2,'Accepted', 3,'Rejected', 4,'Completed') DEFAULT 'Pending'

CREATE TABLE blood_requests (
    id INT AUTO_INCREMENT PRIMARY KEY,
    recipient_id INT NOT NULL,
    donor_id INT NULL,
    blood_group ENUM('A+', 'A-', 'B+', 'B-', 'AB+', 'AB-', 'O+', 'O-') NOT NULL,
    request_units INT DEFAULT 1 NOT NULL,
    status INT,
    latitude DECIMAL(10,8) NOT NULL,
    longitude DECIMAL(11,8) NOT NULL,
    request_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);



ENUM(1'Sent', 2'Delivered', 3'Seen', 4'Accept') DEFAULT 'Sent'

CREATE TABLE donor_notifications (
    id INT AUTO_INCREMENT PRIMARY KEY,
    recipient_id INT NOT NULL,
    donor_id INT NOT NULL,
    request_id INT NOT NULL,
    status INT,
    sent_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (donor_id) REFERENCES users(id) ON DELETE CASCADE 
);


CREATE TABLE testimonials (
    id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT NOT NULL,
    message TEXT NOT NULL,
    rating INT ,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
);


CREATE TABLE messages (
    id INT AUTO_INCREMENT PRIMARY KEY,
    sender_id INT NOT NULL,
    receiver_id INT NOT NULL,
    message TEXT NOT NULL,
    sent_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (sender_id) REFERENCES users(id) ON DELETE CASCADE,
    FOREIGN KEY (receiver_id) REFERENCES users(id) ON DELETE CASCADE
);


-- Create donor_info Table
CREATE TABLE donor_info (
    id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT NOT NULL,
    user_gender ENUM('Male', 'Female', 'Other') NOT NULL,
    weight DECIMAL(5,2) NOT NULL,
    height DECIMAL(5,2) NOT NULL,
    blood_pressure VARCHAR(10),
    pulse_rate INT,
    body_temperature DECIMAL(4,2),
    hemoglobin_level DECIMAL(4,2),
    cholesterol DECIMAL(5,2),
    last_donation_date DATE,
    total_donations INT DEFAULT 0,
    chronic_diseases TEXT,
    medications TEXT,
    smoking_status ENUM('Yes', 'No') DEFAULT 'No',
    alcohol_consumption ENUM('Yes', 'No') DEFAULT 'No',
    travel_history TEXT,
    tattoos_piercings ENUM('Yes', 'No') DEFAULT 'No',
    pregnancy_status ENUM('Yes', 'No', 'N/A') DEFAULT 'N/A',
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES users(user_id) ON DELETE CASCADE
);



ENUM(1,'Pending',2, 'Reviewed', 3, 'Resolved') DEFAULT 'Pending'


CREATE TABLE reports (
    id INT AUTO_INCREMENT PRIMARY KEY,
    reported_by INT NOT NULL,
    reported_user INT NOT NULL,
    reason TEXT NOT NULL,
    status INT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (reported_by) REFERENCES users(user_id) ,
    FOREIGN KEY (reported_user) REFERENCES users(user_id)
);



UPDATE users
SET user_distance = (
    (6371 * ACOS(
        COS(RADIANS(9.9312)) * COS(RADIANS(latitude)) * 
        COS(RADIANS(longitude) - RADIANS(76.2673)) + 
        SIN(RADIANS(9.9312)) * SIN(RADIANS(latitude))
    ))) * 
    CASE 
        WHEN latitude >= 9.9312 THEN 1  -- North of Kochi → Distance remains positive
        ELSE -1                         -- South of Kochi → Distance becomes negative
    END;
